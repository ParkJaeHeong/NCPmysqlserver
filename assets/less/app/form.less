.input-wrap {
  > input {
    display: block;
    width: 100%;
    height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
    padding: @padding-base-vertical @padding-base-horizontal;
    font-size: @font-size-base;
    line-height: @line-height-base;
    color: @input-color;
    background-color: @input-bg;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid @input-border;
    border-radius: @input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
    .box-shadow(inset 0 1px 1px rgba(0,0,0,.05));
    .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");

    // Customize the `:focus` state to imitate native WebKit styles.
    .form-control-focus();

    // Placeholder
    .placeholder();

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
      cursor: @cursor-disabled;
      background-color: @input-bg-disabled;
      opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
    }

    // Reset height for `textarea`s
    textarea& {
      height: auto;
    }
  }
}

label[check] {
  position: relative;
  display: inline-block;
  min-height: 24px;
  line-height: 24px;
  padding-left: 28px;
  cursor: pointer;

  > input[type=checkbox] {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    opacity: 0;

    & + i {
      position: absolute;
      top: 0;
      left: 0;
      width: 24px;
      height: 100%;
      background: url('/icon/checkbox-off.svg') left -1px no-repeat;
    }

    &:checked + i {
      background-image: url('/icon/checkbox-on.svg');
    }
  }

  &.circle-chx {
    > input[type=checkbox] {
      & + i {
        background: url('/icon/checkbox2-off.svg') left -1px no-repeat;
      }

      &:checked + i {
        background-image: url('/icon/checkbox2-on.svg');
      }
    }
  }
}
